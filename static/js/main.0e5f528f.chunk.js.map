{"version":3,"sources":["PlayersQty/PlayersQty.jsx","TableModal/TableModal.jsx","RolesTable/RolesTable.jsx","RolesTableWrapper/RolesTableWrapper.jsx","App.js","index.js"],"names":["PlayersQty","props","useState","inpPlayersQty","setInpPlayersQty","onChange","e","i","players","forEach","player","value","target","checked","updatePlayers","playersCheckboxes","map","index","span","className","label","Title","gutter","align","justify","type","size","onClick","updPQ","setPlayersQtyVisible","TableModal","handleOk","title","visible","isModalVisible","onOk","onCancel","handleCancel","footer","roleRules","RolesTable","tableData","setTableData","columns","dataIndex","key","render","text","record","dataRole","showModal","useEffect","data","randomRole","roles","getRandomInt","length","newDataEntity","id","role","name","cardNum","resNum","push","pagination","dataSource","RolesTableWrapper","setIsModalVisible","setRoleRules","firstMover","setFirstMover","min","max","Math","ceil","floor","random","xs","lg","playersQty","roleId","dataset","App","setPlayersQty","playersQtyIsVisible","setPlayers","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e5f528f.chunk.js","sourcesContent":["import {Button, Checkbox, Row, Col} from \"antd\";\r\nimport './PlayersQty.css'\r\nimport Title from \"antd/es/typography/Title\";\r\nimport {useState} from \"react\";\r\n\r\nconst PlayersQty = (props) => {\r\n    const [inpPlayersQty, setInpPlayersQty] = useState(4);\r\n\r\n    const btnOnClick = () => {\r\n        props.updPQ(inpPlayersQty);\r\n        props.setPlayersQtyVisible(false);\r\n    }\r\n    const onChange = (e) => {\r\n        let i = 0;\r\n        props.players.forEach((player) => {\r\n            if (player.value === e.target.value) {\r\n                player.checked = e.target.checked;\r\n                props.updatePlayers([...props.players])\r\n            }\r\n            if (player.checked) {\r\n                i++;\r\n            }\r\n        })\r\n        setInpPlayersQty(i);\r\n    }\r\n\r\n    const playersCheckboxes = props.players.map((player, index) => {\r\n        return (\r\n            <Col key={index} span={12}>\r\n                <Checkbox className=\"custom-checkbox\" checked={player.checked} value={player.value} onChange={onChange}>{player.label}</Checkbox>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container container--qty\">\r\n            <div className={\"players-qty\"}>\r\n                <div className=\"players-qty__inner\">\r\n                    <Title>Игроки</Title>\r\n                        <Row gutter={[16, 16]} align={'middle'} justify={'center'}>\r\n                            {playersCheckboxes}\r\n                        </Row>\r\n                    <br />\r\n                    <Button type=\"primary\" size=\"large\" onClick={btnOnClick}>GO</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayersQty;","import {Button, Modal} from \"antd\";\r\n\r\nconst TableModal = (props) => {\r\n\r\n    const handleOk = () => {\r\n        props.handleOk();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.handleCancel();\r\n    };\r\n\r\n    return (\r\n        <Modal title=\"Описание роли\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel} footer={[\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                OK\r\n            </Button>,\r\n        ]}>\r\n            <p>{props.roleRules}</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TableModal;","import {Table} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\nimport \"./RolesTable.css\";\r\n\r\nconst RolesTable = (props) => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Игрок',\r\n            dataIndex: 'player',\r\n            key: 'player',\r\n        },\r\n        {\r\n            title: 'Роль',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n            render: (text, record) => <span className='roleLink' data-id={record.dataRole} onClick={props.showModal}>{text}</span>,\r\n        },\r\n        {\r\n            title: 'Количество карт',\r\n            dataIndex: 'cardNum',\r\n            key: 'cardNum',\r\n        },\r\n        {\r\n            title: 'Кол-во возвращений в игру',\r\n            dataIndex: 'resNum',\r\n            key: 'resNum',\r\n        },\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        props.players.forEach((player) => {\r\n\r\n            if (player.checked) {\r\n                let randomRole = props.roles[props.getRandomInt(0, props.roles.length)];\r\n                let newDataEntity = {\r\n                    key: player.id,\r\n                    player: player.label,\r\n                    role: randomRole.name,\r\n                    dataRole: randomRole.id,\r\n                    cardNum: randomRole.id === 0 ? 9 : props.getRandomInt(5, 8),\r\n                    resNum: randomRole.id === 0 ? 0 : props.getRandomInt(1, 3),\r\n                }\r\n\r\n                data.push(newDataEntity);\r\n            }\r\n        })\r\n        setTableData(data)\r\n    },[])\r\n\r\n    return (\r\n        <Table pagination={false} columns={columns} dataSource={tableData}/>\r\n    )\r\n}\r\n\r\nexport default RolesTable;","import {Button, Col, Row} from \"antd\";\r\nimport TableModal from \"../TableModal/TableModal\";\r\nimport RolesTable from \"../RolesTable/RolesTable\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst RolesTableWrapper = (props) => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const [roleRules, setRoleRules] = useState('...')\r\n\r\n    const [firstMover, setFirstMover] = useState('...')\r\n\r\n\r\n    useEffect(() => {\r\n        const chooseFirstMover = () => {\r\n            return (props.players[getRandomInt(0, props.players.length)].label)\r\n        }\r\n        setFirstMover(chooseFirstMover());\r\n    }, [props.players])\r\n\r\n\r\n    const roles = [\r\n        {\r\n            id: 0,\r\n            name: 'Варвар',\r\n            roleRules: 'Отбивается 1 раз за игру, нельзя вернуть в игру'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Танк',\r\n            roleRules: 'Может отбить одной картой две'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Некромант',\r\n            roleRules: 'Воскрешает 2 карты из отбоя в руку сопернику 3 раза за игру'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ядовитый',\r\n            roleRules: 'Делает укол с ядом 2 раза за игру'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Дамагер',\r\n            roleRules: 'Может подкидывать +- 1 карту по номиналу'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Плут',\r\n            roleRules: 'Два козыря'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Отражатель',\r\n            roleRules: 'Отражает карту 2 раза за игру'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'Реверсивный',\r\n            roleRules: 'Бьет большие карты меньшими, может 1 раз вернуть себе 2 свои карты из отбоя'\r\n        }\r\n    ];\r\n\r\n    const getRandomInt = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n        const roleId = e.target.dataset.id\r\n        setRoleRules(roles[roleId].roleRules);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const btnOnClick = () => {\r\n        props.setPlayersQtyVisible(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container--main\">\r\n            <Row justify=\"center\">\r\n                <Col xs={24} lg={12} align=\"center\">\r\n                    <RolesTable playersQty={props.playersQty} showModal={showModal} roles={roles} players={props.players} getRandomInt={getRandomInt}/>\r\n                    <br />\r\n                    <div>Ходит { firstMover }</div>\r\n                    <br />\r\n                    <Button type=\"primary\" size=\"large\" onClick={btnOnClick}>Новая партия</Button>\r\n                </Col>\r\n            </Row>\r\n            <TableModal isModalVisible={isModalVisible} handleOk={handleOk} handleCancel={handleCancel} roleRules={roleRules}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RolesTableWrapper;","//TODO Добавить добавление кастомного игрока\n\nimport './App.css';\nimport PlayersQty from \"./PlayersQty/PlayersQty\";\nimport RolesTableWrapper from \"./RolesTableWrapper/RolesTableWrapper\";\nimport {useState} from \"react\";\n\n\nfunction App() {\n    const [playersQty, setPlayersQty] = useState(0);\n    const [playersQtyIsVisible, setPlayersQtyVisible] = useState(true);\n    const [players, setPlayers] = useState([\n        { id: 1, label: 'Денис', value: 'Денис', checked: true},\n        { id: 2, label: 'Сергей 1', value: 'Сергей 1', checked: true},\n        { id: 3, label: 'Анна', value: 'Анна', checked: true},\n        { id: 4, label: 'Сергей 2', value: 'Сергей 2', checked: true},\n        ]\n    );\n\n    const updPQ = (inpPlayersQty) => {\n        setPlayersQty(inpPlayersQty);\n    }\n    const updatePlayers = (players) => {\n        setPlayers(players)\n    }\n\n    return (\n          <main>\n              {playersQtyIsVisible ?\n                  <PlayersQty updPQ={updPQ} setPlayersQtyVisible={setPlayersQtyVisible} players={players} updatePlayers={updatePlayers}/> :\n                  <RolesTableWrapper playersQty={playersQty} setPlayersQtyVisible={setPlayersQtyVisible} players={players}/>\n              }\n          </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}