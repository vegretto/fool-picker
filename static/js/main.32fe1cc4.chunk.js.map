{"version":3,"sources":["PlayersQty/PlayersQty.jsx","TableModal/TableModal.jsx","RolesTable/RolesTable.jsx","RolesTableWrapper/RolesTableWrapper.jsx","App.js","index.js"],"names":["PlayersQty","props","useState","inpPlayersQty","setInpPlayersQty","onChange","e","i","players","forEach","player","value","target","checked","updatePlayers","playersCheckboxes","map","index","span","className","label","Title","gutter","align","justify","type","size","onClick","updPQ","setPlayersQtyVisible","TableModal","handleOk","title","visible","isModalVisible","onOk","onCancel","handleCancel","footer","roleRules","RolesTable","tableData","setTableData","columns","dataIndex","key","render","text","record","dataRole","showModal","useEffect","data","playersQty","randomRole","roles","getRandomInt","length","newDataEntity","role","name","id","cardNum","resNum","push","pagination","dataSource","RolesTableWrapper","setIsModalVisible","setRoleRules","min","max","Math","ceil","floor","random","xs","lg","roleId","dataset","App","setPlayersQty","playersQtyIsVisible","setPlayers","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32fe1cc4.chunk.js","sourcesContent":["import {Button, Checkbox, Row, Col} from \"antd\";\r\nimport './PlayersQty.css'\r\nimport Title from \"antd/es/typography/Title\";\r\nimport {useState} from \"react\";\r\n\r\nconst PlayersQty = (props) => {\r\n    const [inpPlayersQty, setInpPlayersQty] = useState(4);\r\n\r\n    const btnOnClick = () => {\r\n        props.updPQ(inpPlayersQty);\r\n        props.setPlayersQtyVisible(false);\r\n    }\r\n    const onChange = (e) => {\r\n        let i = 0;\r\n        props.players.forEach((player) => {\r\n            if (player.value === e.target.value) {\r\n                player.checked = e.target.checked;\r\n                props.updatePlayers([...props.players])\r\n            }\r\n            if (player.checked) {\r\n                i++;\r\n            }\r\n        })\r\n        setInpPlayersQty(i);\r\n    }\r\n\r\n    const playersCheckboxes = props.players.map((player, index) => {\r\n        return (\r\n            <Col key={index} span={12}>\r\n                <Checkbox className=\"custom-checkbox\" checked={player.checked} value={player.value} onChange={onChange}>{player.label}</Checkbox>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container container--qty\">\r\n            <div className={\"players-qty\"}>\r\n                <div className=\"players-qty__inner\">\r\n                    <Title>Игроки</Title>\r\n                        <Row gutter={[16, 16]} align={'middle'} justify={'center'}>\r\n                            {playersCheckboxes}\r\n                        </Row>\r\n                    <br />\r\n                    <Button type=\"primary\" size=\"large\" onClick={btnOnClick}>GO</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayersQty;","import {Button, Modal} from \"antd\";\r\n\r\nconst TableModal = (props) => {\r\n\r\n    const handleOk = () => {\r\n        props.handleOk();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.handleCancel();\r\n    };\r\n\r\n    return (\r\n        <Modal title=\"Описание роли\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel} footer={[\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                OK\r\n            </Button>,\r\n        ]}>\r\n            <p>{props.roleRules}</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TableModal;","import {Table} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\nimport \"./RolesTable.css\";\r\n\r\nconst RolesTable = (props) => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Игрок',\r\n            dataIndex: 'player',\r\n            key: 'player',\r\n        },\r\n        {\r\n            title: 'Роль',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n            render: (text, record) => <span className='roleLink' data-id={record.dataRole} onClick={props.showModal}>{text}</span>,\r\n        },\r\n        {\r\n            title: 'Количество карт',\r\n            dataIndex: 'cardNum',\r\n            key: 'cardNum',\r\n        },\r\n        {\r\n            title: 'Кол-во возвращений в игру',\r\n            dataIndex: 'resNum',\r\n            key: 'resNum',\r\n        },\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        for (let i = 0; i < props.playersQty; i++) {\r\n            let randomRole = props.roles[props.getRandomInt(0, props.roles.length)];\r\n            let newDataEntity = {\r\n                key: i + 1,\r\n                player: props.players[i].label,\r\n                role: randomRole.name,\r\n                dataRole: randomRole.id,\r\n                cardNum: randomRole.id === 0 ? 9 : props.getRandomInt(5, 8),\r\n                resNum: randomRole.id === 0 ? 0 : props.getRandomInt(1, 3),\r\n            }\r\n            data.push(newDataEntity);\r\n        }\r\n        setTableData(data)\r\n    },[])\r\n\r\n    return (\r\n        <Table pagination={false} columns={columns} dataSource={tableData}/>\r\n    )\r\n}\r\n\r\nexport default RolesTable;","import {Button, Col, Row} from \"antd\";\r\nimport TableModal from \"../TableModal/TableModal\";\r\nimport RolesTable from \"../RolesTable/RolesTable\";\r\nimport {useState} from \"react\";\r\n\r\nconst RolesTableWrapper = (props) => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const [roleRules, setRoleRules] = useState('...')\r\n\r\n    const roles = [\r\n        {\r\n            id: 0,\r\n            name: 'Варвар',\r\n            roleRules: '9 карт, отбивается 1 раз за игру, нельзя вернуть в игру'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Танк',\r\n            roleRules: '6 карт, может отбить одной картой две'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Некромант',\r\n            roleRules: '7 карт, воскрешает 2 карты из отбоя в руку сопернику 2 раза за игру'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ядовитый',\r\n            roleRules: '7 карт, делает укол с ядом 2 раза за игру'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Дамагер',\r\n            roleRules: '6 карт, может подкидывать +- 1 карту по номиналу'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Плут',\r\n            roleRules: '7 карт, два козыря'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Отражатель',\r\n            roleRules: '7 карт, отражает карту 2 раза за игру'\r\n        }\r\n    ];\r\n\r\n    const getRandomInt = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n        const roleId = e.target.dataset.id\r\n        setRoleRules(roles[roleId].roleRules);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const btnOnClick = () => {\r\n        props.setPlayersQtyVisible(true);\r\n    }\r\n\r\n    const chooseFirstMover = () => {\r\n        return (props.players[getRandomInt(0, props.players.length)].label)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container--main\">\r\n            <Row justify=\"center\">\r\n                <Col xs={24} lg={12} align=\"center\">\r\n                    <RolesTable playersQty={props.playersQty} showModal={showModal} roles={roles} players={props.players} getRandomInt={getRandomInt}/>\r\n                    <br />\r\n                    <div>Ходит { chooseFirstMover() }</div>\r\n                    <br />\r\n                    <Button type=\"primary\" size=\"large\" onClick={btnOnClick}>Новая партия</Button>\r\n                </Col>\r\n            </Row>\r\n            <TableModal isModalVisible={isModalVisible} handleOk={handleOk} handleCancel={handleCancel} roleRules={roleRules}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RolesTableWrapper;","import './App.css';\nimport PlayersQty from \"./PlayersQty/PlayersQty\";\nimport RolesTableWrapper from \"./RolesTableWrapper/RolesTableWrapper\";\nimport {useState} from \"react\";\n\n\nfunction App() {\n    const [playersQty, setPlayersQty] = useState(0);\n    const [playersQtyIsVisible, setPlayersQtyVisible] = useState(true);\n    const [players, setPlayers] = useState([\n        { label: 'Денис', value: 'Денис', checked: true},\n        { label: 'Сергей 1', value: 'Сергей 1', checked: true},\n        { label: 'Сергей 2', value: 'Сергей 2', checked: true},\n        { label: 'Анна', value: 'Анна', checked: true}\n        ]\n    );\n\n    const updPQ = (inpPlayersQty) => {\n        setPlayersQty(inpPlayersQty);\n    }\n    const updatePlayers = (players) => {\n        setPlayers(players)\n    }\n\n    return (\n          <main>\n              {playersQtyIsVisible ?\n                  <PlayersQty updPQ={updPQ} setPlayersQtyVisible={setPlayersQtyVisible} players={players} updatePlayers={updatePlayers}/> :\n                  <RolesTableWrapper playersQty={playersQty} setPlayersQtyVisible={setPlayersQtyVisible} players={players}/>\n              }\n          </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}