{"version":3,"sources":["PlayersQty/PlayersQty.jsx","TableModal/TableModal.jsx","RolesTable/RolesTable.jsx","RolesTableWrapper/RolesTableWrapper.jsx","App.js","index.js"],"names":["PlayersQty","props","onChange","e","playersCopy","players","target","playerId","checked","updatePlayers","playersCheckboxes","map","player","index","span","className","id","value","label","Title","gutter","align","justify","type","size","onClick","setPlayersQtyVisible","TableModal","handleOk","title","visible","isModalVisible","onOk","onCancel","handleCancel","footer","roleRules","RolesTable","useState","tableData","setTableData","columns","dataIndex","key","render","text","record","style","color","background","bgColor","children","dataRole","showModal","useEffect","data","forEach","randomRole","roles","getRandomInt","length","newDataEntity","role","name","cardNum","resNum","push","pagination","rowClassName","dataSource","RolesTableWrapper","setIsModalVisible","setRoleRules","firstMover","setFirstMover","min","max","Math","ceil","floor","random","xs","lg","playersQty","roleId","dataset","App","setPlayersQty","playersQtyIsVisible","setPlayers","addPlayer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19b2d55d.chunk.js","sourcesContent":["import {Button, Checkbox, Row, Col} from \"antd\";\r\nimport './PlayersQty.css'\r\nimport Title from \"antd/es/typography/Title\";\r\nimport {useState} from \"react\";\r\n\r\nconst PlayersQty = (props) => {\r\n\r\n    const btnOnClick = () => {\r\n        props.setPlayersQtyVisible(false);\r\n    }\r\n    const onChange = (e) => {\r\n        let playersCopy = [...props.players];\r\n        playersCopy[e.target.playerId].checked = e.target.checked;\r\n        props.updatePlayers(playersCopy, e.target.checked);\r\n    }\r\n\r\n    const playersCheckboxes = props.players.map((player, index) => {\r\n        return (\r\n            <Col key={index} span={12}>\r\n                <Checkbox className=\"custom-checkbox\" playerId={player.id} checked={player.checked} value={player.value} onChange={onChange}>{player.label}</Checkbox>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container container--qty\">\r\n            <div className={\"players-qty\"}>\r\n                <div className=\"players-qty__inner\">\r\n                    <Title>Игроки</Title>\r\n                        <Row gutter={[16, 16]} align={'middle'} justify={'center'}>\r\n                            {playersCheckboxes}\r\n                        </Row>\r\n                    <br />\r\n                    <Button type=\"primary\" size=\"large\" onClick={btnOnClick}>GO</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayersQty;","import {Button, Modal} from \"antd\";\r\n\r\nconst TableModal = (props) => {\r\n\r\n    const handleOk = () => {\r\n        props.handleOk();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.handleCancel();\r\n    };\r\n\r\n    return (\r\n        <Modal title=\"Описание роли\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel} footer={[\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                OK\r\n            </Button>,\r\n        ]}>\r\n            <p>{props.roleRules}</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TableModal;","import {Table} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\nimport \"./RolesTable.css\";\r\n\r\nconst RolesTable = (props) => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Игрок',\r\n            dataIndex: 'player',\r\n            key: 'player',\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {\r\n                            color: record.color,\r\n                            background: record.bgColor\r\n                        },\r\n                    },\r\n                    children: <div>{text}</div>,\r\n                };\r\n            },\r\n        },\r\n        {\r\n            title: 'Роль',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n            render: (text, record) => {\r\n                return {\r\n                    props: {\r\n                        style: {\r\n                            color: record.color,\r\n                            background: record.bgColor\r\n                        },\r\n                    },\r\n                    children: <span className='roleLink' data-id={record.dataRole} onClick={props.showModal}>{text}</span>\r\n            }\r\n            }\r\n        },\r\n        {\r\n            title: 'Количество карт',\r\n            dataIndex: 'cardNum',\r\n            key: 'cardNum',\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {\r\n                            color: record.color,\r\n                            background: record.bgColor\r\n                        },\r\n                    },\r\n                    children: <div>{text}</div>,\r\n                };\r\n            },\r\n        },\r\n        {\r\n            title: 'Кол-во возвращений в игру',\r\n            dataIndex: 'resNum',\r\n            key: 'resNum',\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {\r\n                            color: record.color,\r\n                            background: record.bgColor\r\n                        },\r\n                    },\r\n                    children: <div>{text}</div>,\r\n                };\r\n            },\r\n        },\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        props.players.forEach((player) => {\r\n\r\n            if (player.checked) {\r\n                let randomRole = props.roles[props.getRandomInt(0, props.roles.length)];\r\n                let newDataEntity = {\r\n                    key: player.id,\r\n                    player: player.label,\r\n                    role: randomRole.name,\r\n                    dataRole: randomRole.id,\r\n                    color: randomRole.color,\r\n                    bgColor: randomRole.bgColor,\r\n                    cardNum: randomRole.id === 0 ? 9 : props.getRandomInt(5, 8),\r\n                    resNum: randomRole.id === 0 ? 0 : props.getRandomInt(1, 3),\r\n                }\r\n\r\n                data.push(newDataEntity);\r\n            }\r\n        })\r\n        setTableData(data)\r\n    },[])\r\n\r\n    return (\r\n        <Table pagination={false} rowClassName={'test'} columns={columns} dataSource={tableData}/>\r\n    )\r\n}\r\n\r\nexport default RolesTable;","import {Button, Col, Row} from \"antd\";\r\nimport TableModal from \"../TableModal/TableModal\";\r\nimport RolesTable from \"../RolesTable/RolesTable\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst RolesTableWrapper = (props) => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const [roleRules, setRoleRules] = useState('...')\r\n\r\n    const [firstMover, setFirstMover] = useState('...')\r\n\r\n\r\n    useEffect(() => {\r\n        const chooseFirstMover = () => {\r\n            return (props.players[getRandomInt(0, props.players.length)].label)\r\n        }\r\n        setFirstMover(chooseFirstMover());\r\n    }, [props.players])\r\n\r\n\r\n    const roles = [\r\n        {\r\n            id: 0,\r\n            name: 'Варвар',\r\n            color: '#000',\r\n            bgColor: '#afafaf',\r\n            roleRules: 'Отбивается 1 раз за игру, нельзя вернуть в игру'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Танк',\r\n            color: '#000',\r\n            bgColor: '#51885d',\r\n            roleRules: 'Может отбить одной картой две'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Некромант',\r\n            color: '#fff',\r\n            bgColor: '#212121',\r\n            roleRules: 'Воскрешает 2 карты из отбоя в руку сопернику 3 раза за игру'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ядовитый',\r\n            color: '#000',\r\n            bgColor: '#00ff1f',\r\n            roleRules: 'Делает укол с ядом 2 раза за игру'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Дамагер',\r\n            color: '#000',\r\n            bgColor: '#ff5151',\r\n            roleRules: 'Может подкидывать +- 1 карту по номиналу'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Плут',\r\n            color: '#000',\r\n            bgColor: '#f8ff8d',\r\n            roleRules: 'Два козыря'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Отражатель',\r\n            color: '#000',\r\n            bgColor: '#ce8e00',\r\n            roleRules: 'Отражает карту 2 раза за игру'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'Реверсивный',\r\n            color: '#000',\r\n            bgColor: '#b912ff',\r\n            roleRules: 'Бьет большие карты меньшими, может 1 раз вернуть себе 2 свои карты из отбоя'\r\n        }\r\n    ];\r\n\r\n    const getRandomInt = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n        const roleId = e.target.dataset.id\r\n        setRoleRules(roles[roleId].roleRules);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const btnOnClick = () => {\r\n        props.setPlayersQtyVisible(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container--main\">\r\n            <Row justify=\"center\">\r\n                <Col xs={24} lg={12} align=\"center\">\r\n                    <RolesTable playersQty={props.playersQty} showModal={showModal} roles={roles} players={props.players} getRandomInt={getRandomInt}/>\r\n                    <br />\r\n                    <div>Ходит { firstMover }</div>\r\n                    <br />\r\n                    <Button type=\"primary\" size=\"large\" onClick={btnOnClick}>Новая партия</Button>\r\n                </Col>\r\n            </Row>\r\n            <TableModal isModalVisible={isModalVisible} handleOk={handleOk} handleCancel={handleCancel} roleRules={roleRules}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RolesTableWrapper;","//TODO Добавить добавление кастомного игрока\n\nimport './App.css';\nimport PlayersQty from \"./PlayersQty/PlayersQty\";\nimport RolesTableWrapper from \"./RolesTableWrapper/RolesTableWrapper\";\nimport {useState} from \"react\";\n\n\nfunction App() {\n    const [playersQty, setPlayersQty] = useState(0);\n    const [playersQtyIsVisible, setPlayersQtyVisible] = useState(true);\n    const [players, setPlayers] = useState([\n        { id: 0, label: 'Денис', value: 'Денис', checked: true},\n        { id: 1, label: 'Сергей 1', value: 'Сергей 1', checked: true},\n        { id: 2, label: 'Анна', value: 'Анна', checked: true},\n        { id: 3, label: 'Сергей 2', value: 'Сергей 2', checked: true},\n        ]\n    );\n\n    const updPQ = (inpPlayersQty) => {\n        setPlayersQty(inpPlayersQty);\n    }\n    const updatePlayers = (players, addPlayer) => {\n        setPlayers(players);\n        addPlayer ? setPlayersQty(playersQty + 1) :  setPlayersQty(playersQty - 1)\n    }\n\n    return (\n          <main>\n              {playersQtyIsVisible ?\n                  <PlayersQty setPlayersQtyVisible={setPlayersQtyVisible} players={players} updatePlayers={updatePlayers}/> :\n                  <RolesTableWrapper playersQty={playersQty} setPlayersQtyVisible={setPlayersQtyVisible} players={players}/>\n              }\n          </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}